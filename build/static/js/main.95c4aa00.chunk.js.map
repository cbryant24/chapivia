{"version":3,"sources":["components/style/globalStyle.js","components/style/space.js","components/style/forms_inputs.js","components/style/buttons.js","components/style/flex.js","components/style/links.js","components/style/modal.js","components/style/theme.js","components/style/animations.js","components/Modal.js","hooks/useEventListener.js","queries/CurrentUser.js","mutations/Login.js","mutations/Signup.js","mutations/Logout.js","hooks/useAuth.js","components/Signin.js","components/Signup.js","queries/Trivia.js","queries/CorrectGuesses.js","queries/TriviaAnswer.js","queries/GuessList.js","mutations/Guess.js","queries/UnguessedPlayers.js","localState/Queries.js","queries/Scores.js","queries/PrevMonthWinners.js","components/PrevMonthWinners.js","components/GameController.js","components/Background.js","components/TopMenu.js","index.js","components/App.js","components/galaga_bg.gif"],"names":["createGlobalStyle","_templateObject","marginSmall","m","marginMedium","marginLarge","marginSmallX","mx","marginMediumX","marginLargeX","marginSmallY","my","marginMediumY","marginLargeY","marginTopSmall","mt","marginTopMedium","marginTopLarge","marginBottomSmall","mb","marginBottomMedium","marginBottomLarge","paddingSmall","p","paddingMedium","paddingLarge","paddingSmallX","px","paddingMediumX","paddingLargeX","paddingSmallY","py","paddingMediumY","paddingLargeY","authForm","display","height","inputMain","appearance","verticalAlign","color","lineHeight","letterSpacing","fontFamily","backgroundColor","borderRadius","borderWidth","borderStyle","borderColor","transition","minHeight","focusWithin","boxShadow","fieldMain","fontSize","justifyContent","flexDirection","button","fordwardedAs","textAlign","cursor","squareButton","minWidth","fontWeight","textDecoration","disabledSquareButton","Object","objectSpread","flexSpaceEvenlyColumn","flexCenterSpaceEvenlyColumn","alignItems","flexSpaceBetweenColumn","flexColumnCenter","linkNormal","pseudo","hover","border","modalBackgroundStyle","position","top","left","width","zIndex","modalContainer","fontSizeModule","margin","transform","red","colors","black","white","primary","secondary","tertiary","addAliases","arr","aliases","forEach","key","i","defineProperty","enumerable","get","this","breakpoints","mediaQueries","map","n","concat","reduceMotion","reduceTransparency","font","fontWeights","light","regular","bold","extraBold","baseShadow","boxShadows","theme","spaceSettings","formInputs","buttons","flex","links","modal","mono","fontSizes","fontSizesModule","zIndices","sizes","lineHeights","condensedUltra","condensed","default","space","infiniteBackground","continuous","from","background-position","to","duration_continuous","animation_timing_function","flashingText","opacity","Modal","_ref","isOpen","toggleModal","modalMessage","react_default","a","createElement","dist","id","onBackgroundClick","onEscapeKeydown","themeStyle","allowScroll","animation","in","BounceAnimations","BounceInTop","duration_in","animation_fill_mode","Array","isArray","message","alignSelf","onClick","useEventListener","eventName","handler","element","arguments","length","undefined","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","gql","CurrentUser_templateObject","Login_templateObject","Signup_templateObject","Logout_templateObject","authContext","createContext","ProvideAuth","children","auth","_useState","useState","_useState2","slicedToArray","user","setUser","_useQuery","useQuery","graphqlUser","userLoading","loading","userData","error","data","refetch","_useMutation","useMutation","graphqlSignin","userSignin","_useMutation3","graphqlSignout","userSignout","_useMutation5","graphqlSignup","userSignup","signin","_ref2","email","password","variables","then","_ref3","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","catch","err","console","log","signup","_ref4","name","_ref5","_callee2","_context2","_x2","signout","_ref6","_callee3","_context3","_x3","sendPasswordResetEmail","confirmPasswordReset","code","useProvideAuth","Provider","value","useAuth","useContext","Signin","props","setIsOpen","_useState3","_useState4","signinOpen","setSigninOpen","_useState5","_useState6","_useAuth","history","push","useCallback","e","textTransform","Signup","Trivia_templateObject","CorrectGuesses_templateObject","TriviaAnswer_templateObject","GuessList_templateObject","Guess_templateObject","UnguessedPlayers_templateObject","DAILY_TRIVIA","Queries_templateObject","Scores_templateObject","PrevMonthWinners_templateObject","PrevMonthWinners","Component","Background","backgroundImage","galagaGif","backgroundRepeat","backgroundPosition","backgroundSize","TopMenu","_useQuery2","query","scoresLoading","playerScores","createLink","Link","localTrivia","category","score","client","ApolloClient","clientState","defaults","questionId","question","questionChoices","questionChoicesId","__typename","resolvers","typeDefs","uri","ReactDOM","render","react_common_esm","react_router_dom","react_router_last_location_dist","globalStyle","components_TopMenu","react_router","path","exact","component","document","getElementById","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.95c4aa00.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    font-weight: inherit;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n\n  *,\n  *::after,\n  *::before {\n    margin: 0;\n    padding: 0;\n    box-sizing: inherit;\n  }\n\n  table {\n    border-collapse: collapse;\n  }\n\n  html {\n    min-height: 100%;\n    min-width: 100%;\n\n    // This defines what 1rem is\n    font-size: 62.5%; //1 rem = 10px; 10px/16px = 62.5%\n  }\n\n  ul {\n    list-style: none;\n  }\n\n  a {\n    cursor: pointer;\n  }\n\n  a:hover {\n    border-bottom: 2px solid white;\n  }\n  body {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    font-family: 'Press Start 2P', cursive;;\n    font-weight: normal;\n    font-style: normal;\n    color: #ffffff;\n    line-height: 1.5;\n    letter-spacing: 1px;\n    position: relative;\n    height: 100%;\n    max-height: 100%;\n    width: 100%;\n    -webkit-font-smoothing: antialiased;\n    overflow-x: hidden;\n    -webkit-overflow-scrolling: touch;\n  }\n  a {\n    color: currentColor;\n    text-decoration: none;\n  }\n  textarea {\n    resize: none;\n  }\n\n  h1 {\n    font-size: 4.8em;\n  }\n\n  h2 {\n    font-size: 3.6em;\n  }\n\n  h3 {\n    font-size: 2.2em;\n  }\n\n  h4 {\n    font-size: 2em;\n  }\n`;","///////////// MARGIN DEFINITIONS\n\nexport const marginSmall = {\n  m: ['.5em']\n}\n\nexport const marginMedium = {\n  m: ['2em']\n}\n\nexport const marginLarge = {\n  m: ['3em']\n}\n\nexport const marginSmallX = {\n  mx: ['.5em']\n}\n\nexport const marginMediumX = {\n  mx: ['2em']\n}\n\nexport const marginLargeX = {\n  mx: ['3em']\n}\n\nexport const marginSmallY = {\n  my: ['.5em']\n}\n\nexport const marginMediumY = {\n  my: ['2em']\n}\n\nexport const marginLargeY = {\n  my: ['3em']\n}\n\nexport const marginTopSmall = {\n  mt: ['.5em']\n}\n\nexport const marginTopMedium = {\n  mt: ['2em']\n}\n\nexport const marginTopLarge = {\n  mt: ['3em']\n}\n\nexport const marginBottomSmall = {\n  mb: ['.5em']\n}\n\nexport const marginBottomMedium = {\n  mb: ['2em']\n}\n\nexport const marginBottomLarge = {\n  mb: ['3em']\n}\n\n//////// PADDING DEFINITIONS\n\nexport const paddingSmall = {\n  p: ['.5em']\n}\n\nexport const paddingMedium = {\n  p: ['2em']\n}\n\nexport const paddingLarge = {\n  p: ['3em']\n}\n\nexport const paddingSmallX = {\n  px: ['.5em']\n}\n\nexport const paddingMediumX = {\n  px: ['2em']\n}\n\nexport const paddingLargeX = {\n  px: ['3em']\n}\n\nexport const paddingSmallY = {\n  py: ['.5em']\n}\n\nexport const paddingMediumY = {\n  py: ['2em']\n}\n\nexport const paddingLargeY = {\n  py: ['3em']\n}","export const authForm = {\n  display: 'flex',\n  height: ['30em']\n};\n\nexport const inputMain = {\n  appearance: 'none',\n  verticalAlign: 'middle',\n  color: 'white',\n  lineHeight: 'inherit',\n  letterSpacing: 'inherit',\n  fontFamily: 'inherit',\n  backgroundColor: 'transparent',\n  borderRadius: '5px',\n  borderWidth: '2px',\n  borderStyle: 'solid',\n  borderColor: 'rgb(221, 225, 228)',\n  transition: 'box-shadow 0.125s ease-out 0s',\n  minHeight: ['2em'],\n  mt: [1],\n  focusWithin: {\n    boxShadow: '0px 0px 8px green'\n  }\n};\n\nexport const fieldMain = {\n  fontSize: [2],\n  justifyContent: 'space-between',\n  flexDirection: 'column'\n};\n","export const button = {\n  fordwardedAs: 'button',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'middle',\n  fontFamily: 'inherit',\n  appearance: 'none',\n  cursor: 'pointer'\n};\n//THEME WILL BE PROVIDED TO FORM APP\nexport const squareButton = {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'center',\n  fontSize: [1],\n  minWidth: '2.5em',\n  fontFamily: 'inherit',\n  fontWeight: 'extraBold',\n  lineHeight: ['condensed'],\n  appearance: 'none',\n  cursor: 'pointer',\n  color: 'white',\n  boxShadow: 'none',\n  backgroundColor: 'transparent',\n  textDecoration: 'none',\n  transition: 'box-shadow 0.125s ease-out 0s',\n  borderWidth: '2px',\n  borderStyle: 'solid',\n  borderColor: 'red',\n  px: [2],\n  py: [1]\n};\n\nexport const disabledSquareButton = {\n  ...squareButton,\n  cursor: 'default',\n  color: 'gray'\n};\n","export const flexSpaceEvenlyColumn = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-evenly'\n};\n\nexport const flexCenterSpaceEvenlyColumn = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-evenly',\n  alignItems: 'center'\n};\n\nexport const flexSpaceBetweenColumn = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n};\n\nexport const flexColumnCenter = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n}","export const linkNormal = {\n  pseudo: 'true',\n  color: 'white',\n  fontSize: '.5em',\n  hover: {\n    color: 'red',\n    border: 'none'\n  }\n};","export const modalBackgroundStyle = {\n  display: 'flex',\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  width: '100vw',\n  height: '100vh',\n  zIndex: '30',\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  alignItems: 'center',\n  justifyContent: 'center'\n};\n\nexport const modalContainer = {\n  pseudo: 'true',\n  display: 'flex',\n  fontSizeModule: [1],\n  flexDirection: 'column',\n  justifyContent: 'space-evenly',\n  backgroundColor: 'black',\n  border: '1px solid white',\n  color: 'tertiary',\n  width: ['70%'],\n  height: ['50vh'],\n  margin: 'auto',\n  transform: 'translateY(-500px)'\n};\n","import { get, includes, omit, range } from 'lodash';\nimport * as spaceSettings from './space';\nimport * as formInputs from './forms_inputs';\nimport * as buttons from './buttons';\nimport * as flex from './flex';\nimport * as links from './links';\nimport * as modal from './modal';\n\nconst red = '#e42d42';\nconst white = '#ffffff';\nconst black = '#000000';\nconst primary = red;\nconst secondary = '#4F4FEB';\nconst tertiary = '#ffffff';\n\nexport const colors = {\n  red,\n  black,\n  white,\n  primary,\n  secondary,\n  tertiary\n};\n\nconst createMediaQuery = n => `@media screen and (min-width:${n}px)`;\n\nconst addAliases = (arr, aliases) =>\n  aliases.forEach((key, i) =>\n    //arr in this case can be either an arr or object since an array is an object with\n    //key value pairs that are simply numbers e.g [1: arrItem1, 2: arrItem2 etc]\n    Object.defineProperty(arr, key, {\n      enumerable: false,\n      get() {\n        return this[i];\n      }\n    })\n  );\n\nconst aliases = ['sm', 'md', 'lg', 'xl'];\nexport const breakpoints = ['544px', '768px', '1012px', '1280px'];\n\nexport const mediaQueries = {\n  ...breakpoints.map(createMediaQuery),\n  reduceMotion: '@media (prefers-reduced-motion: reduce)',\n  reduceTransparency: '@media (prefers-reduced-transparency: reduce)'\n};\n\naddAliases(breakpoints, aliases);\naddAliases(mediaQueries, aliases);\n\nconst emoji = '\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"';\nexport const font = `development,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,sans-serif,${emoji}`;\nexport const mono = 'SFMono-Regular,\"Roboto Mono\",Menlo,monospace';\n\nexport const fontSizes = [0, '1.2em', '1.6em', '1.8em', '2em'];\n\n//margin/padding[all, left, right top bottom]\n//grid [grid-gap, grid-column-gap, grid-row-gap]\nexport const space = [0, '.5em', '1em', '1.5em', '2em'];\n\n//width, height, min-width, max-width, min-height, max-height\nexport const sizes = ['0%', '100%', '50%', '33%', '25%', '20%', '10%'];\n\nexport const lineHeights = { condensedUltra: 1, condensed: 1.25, default: 1.5 };\n\n//fontSizesModule is used to size for repsonsiveness using the css design philospohy\n//of modular design with font-size rem for global design and font-size em for local design\n//see https://css-tricks.com/rem-global-em-local/ for explanation `fontSizesModule` is a\n//custom system-styled property that can be used with the scale for parent module font-size design\nexport const fontSizesModule = [0, '.75rem', '1rem', '1.25rem', '1.5rem'];\n\nexport const light = 300;\nexport const regular = 400;\nexport const bold = 600;\nexport const extraBold = 700;\n\n// styled-system's `fontWeight` function can hook into the `fontWeights` object\nexport const fontWeights = { light, regular, bold, extraBold };\n\n// default transition\nexport const transition = 'all 0.125s ease-out';\n\n// styled-system’s `borderRadius` function can hook into the `radii` object/array\nexport const pill = '9999px';\nexport const radii = ['0px', '4px', '8px', '16px', pill];\nexport const radius = '5px';\n\nexport const shadowColor = 'rgba(0,0,0,0.16)';\nexport const baseShadow = '0 0 2px 0 rgba(0,0,0,.08),';\nexport const boxShadows = [\n  baseShadow + `0 2px 4px 0 ${shadowColor}`,\n  baseShadow + `0 4px 8px 0 ${shadowColor}`,\n  baseShadow + `0 12px 12px 0 ${shadowColor}`,\n  baseShadow + `0 24px 24px 0 ${shadowColor}`\n];\n\nexport const zIndices = [0, 1, 5, 10];\n\n//DEFAULT INPUT STYLING\n\nexport const buttonPadding = [0, '.5em', '1em'];\n\n// export const hexa = (color, alpha) => {\n//   const hex = cx(color);\n//   if (!includes(hex, '#')) return shadowColor\n//   const r = parseInt(hex.slice(1, 3), 16),\n//     g = parseInt(hex.slice(3, 5), 16),\n//     b = parseInt(hex.slice(5, 7), 16)\n\n//   if (alpha >= 0) {\n//     return `rgba(${r}, ${g}, ${b}, ${alpha})`\n//   } else {\n//     return `rgb(${r}, ${g}, ${b})`\n//   }\n// }\n\nexport const linkStyle = {\n  pseudo: 'true',\n  color: white,\n  hover: { color: red }\n};\n\nconst theme = {\n  ...spaceSettings,\n  ...formInputs,\n  ...buttons,\n  ...flex,\n  ...links,\n  ...modal,\n  breakpoints,\n  mediaQueries,\n  font,\n  mono,\n  fontSizes,\n  fontSizesModule,\n  fontWeights,\n  transition,\n  boxShadows,\n  zIndices,\n  sizes,\n  colors,\n  lineHeights,\n  space\n};\n\nexport default theme;\n","export const infiniteBackground = {\n  continuous: {\n    from: { 'background-position': '0 0' },\n    to: { 'background-position': '0 -10000px' }\n  },\n  duration_continuous: 75,\n  animation_timing_function: 'linear'\n};\n\nexport const flashingText = {\n  continuous: {\n    from: { opacity: '0' },\n    to: { opacity: '1' }\n  },\n  duration_continuous: 3\n};\n","import React from 'react';\nimport {\n  StyledModal,\n  BounceAnimations,\n  Div,\n  Ul,\n  Li,\n  Button,\n  P\n} from '@cbryant24/styled-react';\n\nexport default ({ isOpen, toggleModal, modalMessage }) => {\n  return (\n    <StyledModal\n      id=\"chapivia-modal\"\n      isOpen={isOpen}\n      onBackgroundClick={toggleModal}\n      onEscapeKeydown={toggleModal}\n      modalBackgroundStyle={{ themeStyle: 'modalBackgroundStyle' }}\n      allowScroll={false}\n    >\n      <Div\n        themeStyle={['modalContainer']}\n        animation={{\n          in: BounceAnimations.BounceInTop,\n          duration_in: 1,\n          animation_fill_mode: 'both'\n        }}\n      >\n        <Ul textAlign=\"center\" my={[1]}>\n          {Array.isArray(modalMessage) ? (\n            modalMessage.map(message => (\n              <Li key={message}>{message.message}</Li>\n            ))\n          ) : (\n            <Li>\n              <P>{modalMessage}</P>\n            </Li>\n          )}\n        </Ul>\n        <Button\n          themeStyle={['squareButton', 'marginSmall']}\n          alignSelf=\"flex-end\"\n          onClick={toggleModal}\n        >\n          Close\n        </Button>\n      </Div>\n    </StyledModal>\n  );\n};\n","import { useState, useRef, useEffect, useCallback } from 'react';\n\n// see usage below\n// hook from https://usehooks.com/useEventListener/\n\nfunction useEventListener(eventName, handler, element = window){\n  // Create a ref that stores handler\n  const savedHandler = useRef();\n  \n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On \n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return;\n      \n      // Create event listener that calls handler function stored in ref\n      const eventListener = event => savedHandler.current(event);\n      \n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n      \n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  );\n};\n\nexport default useEventListener;\n\n////////////////////////////////////\n//////          USAGE         //////\n////////////////////////////////////\n\n// Usage\n// function App(){\n//   // State for storing mouse coordinates\n//   const [coords, setCoords] = useState({ x: 0, y: 0 });\n  \n//   // Event handler utilizing useCallback ...\n//   // ... so that reference never changes.\n//   const handler = useCallback(\n//     ({ clientX, clientY }) => {\n//       // Update coordinates\n//       setCoords({ x: clientX, y: clientY });\n//     },\n//     [setCoords]\n//   );\n  \n//   // Add event listener using our hook\n//   useEventListener('mousemove', handler);\n  \n//   return (\n//     <h1>\n//       The mouse position is ({coords.x}, {coords.y})\n//     </h1>\n//   );\n// }","import gql from 'graphql-tag';\n\nexport default gql`\n  {\n    user {\n      id\n      name\n      email\n      role\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport default gql`\n  mutation Login($email: String!, $password: String!){\n    login(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`","import gql from 'graphql-tag';\n\nexport default gql`\n  mutation Signup($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, name: $name, password: $password ) {\n      id,\n      name\n      email\n    }\n  }\n`;","import gql from 'graphql-tag';\n\nexport default gql`\n  mutation {\n    logout {\n      id\n      email\n    }\n  }\n`;","// Top level App component\nimport React, { useState, useEffect, useContext, createContext } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport graphqlUser from '../queries/CurrentUser';\nimport graphqlSignin from '../mutations/Login';\nimport graphqlSignup from '../mutations/Signup';\nimport graphqlSignout from '../mutations/Logout';\n\n// see usage below\n// hook from https://usehooks.com/useAuth/\n\nconst authContext = createContext();\n\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n  const { loading: userLoading, error, data: userData, refetch } = useQuery(\n    graphqlUser\n  );\n  const [userSignin] = useMutation(graphqlSignin);\n  const [userSignout] = useMutation(graphqlSignout);\n  const [userSignup] = useMutation(graphqlSignup);\n\n  // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n\n  const signin = ({ email, password }) => {\n    return userSignin({\n      variables: { email, password }\n    })\n      .then(async data => {\n        await refetch();\n      })\n      .catch(err => {\n        console.log('error in signin', err);\n        throw err;\n      });\n  };\n\n  const signup = ({ email, password, name }) => {\n    return userSignup({\n      variables: { email, password, name }\n    })\n      .then(async data => {\n        await refetch();\n      })\n      .catch(err => {\n        console.log('error in signup', err);\n        throw err;\n      });\n  };\n\n  const signout = () => {\n    userSignout()\n      .then(async data => {\n        await refetch();\n      })\n      .catch(err => {\n        console.log('we got an error here', err);\n        throw err;\n      });\n  };\n\n  const sendPasswordResetEmail = email => {\n    // return firebase\n    //   .auth()\n    //   .sendPasswordResetEmail(email)\n    //   .then(() => {\n    //     return true;\n    //   });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    // return firebase\n    //   .auth()\n    //   .confirmPasswordReset(code, password)\n    //   .then(() => {\n    //     return true;\n    //   });\n  };\n\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n  useEffect(() => {\n    if (userLoading) return;\n    const { user } = userData;\n\n    if (user) {\n      setUser(user);\n    } else {\n      setUser(false);\n    }\n  }, [userData]);\n\n  // Return the user object and auth methods\n  return {\n    user,\n    userLoading,\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset\n  };\n}\n\nfunction App(props) {\n  return (\n    <ProvideAuth>\n      {/* \n        Route components here, depending on how your app is structured.\n        If using Next.js this would be /pages/_app.js\n      */}\n    </ProvideAuth>\n  );\n}\n\n////////////////////////////////////\n//////          USAGE         //////\n////////////////////////////////////\n\n// Any component that wants auth state\n// import React from \"react\";\n// import { useAuth } from \"./use-auth.js\";\n\n// function Navbar(props) {\n//   // Get auth state and re-render anytime it changes\n//   const auth = useAuth();\n\n//   return (\n//     <NavbarContainer>\n//       <Logo />\n//       <Menu>\n//         <Link to=\"/about\">About</Link>\n//         <Link to=\"/contact\">Contact</Link>\n//         {auth.user ? (\n//           <Fragment>\n//             <Link to=\"/account\">Account ({auth.user.email})</Link>\n//             <Button onClick={() => auth.signout()}>Signout</Button>\n//           </Fragment>\n//         ) : (\n//           <Link to=\"/signin\">Signin</Link>\n//         )}\n//       </Menu>\n//     </NavbarContainer>\n//   );\n// }\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport Form from '@cbryant24/styled-react-form';\nimport { signinValidation } from './validations';\nimport { Div, H1, H3, P } from '@cbryant24/styled-react';\nimport { flashingText } from './style';\n\nimport Modal from './Modal';\n\nimport { useAuth, useEventListener } from '../hooks';\n\n//TODO: Errors message applicable to correct field only\nfunction Signin(props) {\n  const [isOpen, setIsOpen] = useState(false),\n    [signinOpen, setSigninOpen] = useState(false),\n    [modalMessage, setModalMessage] = useState(''),\n    { signin, user, userLoading } = useAuth();\n\n  async function userSignin(event, formVals) {\n    // try {\n    //   await signin(formVals);\n    // } catch (res) {\n    //   debugger;\n    //   console.log(`the error message usersignin ${res}`);\n    //   toggleModal();\n    //   setModalMessage(res.graphQLErrors);\n    //   return;\n    // }\n  }\n\n  useEffect(() => {\n    if (user) props.history.push('/game');\n  }, [user]);\n\n  const toggleModal = e => setIsOpen(!isOpen);\n\n  const handler = useCallback(\n    ({ key }) => {\n      if (key === 'Enter' || key === ' ') {\n        setSigninOpen(true);\n        // toggleModal();\n        // setModalMessage(\n        //   'Chapivia Is Currently In Maintenance Check Back Monday February 17th at 9:00AM '\n        // );\n      }\n    },\n    [setSigninOpen]\n  );\n\n  useEventListener('keydown', handler);\n\n  const inputs = [\n    {\n      data: {\n        type: 'email',\n        name: 'email',\n        label: 'email',\n        placeholder: 'enter email',\n        required: true\n      },\n      fieldStyle: { themeStyle: 'fieldMain' },\n      inputStyle: { themeStyle: 'inputMain' }\n    },\n    {\n      data: {\n        type: 'password',\n        name: 'password',\n        label: 'password',\n        placeholder: 'enter password',\n        required: true\n      },\n      fieldStyle: { themeStyle: 'fieldMain' },\n      inputStyle: { themeStyle: 'inputMain' }\n    }\n  ];\n\n  const buttons = [\n    {\n      text: 'Submit',\n      type: 'submit',\n      cb: null,\n      style: { themeStyle: 'squareButton', mr: [3] }\n    },\n    {\n      text: 'Cancel',\n      type: 'cancel',\n      cb: null,\n      style: { themeStyle: 'squareButton' }\n    }\n  ];\n\n  const form = {\n    data: { name: 'signinForm', submit: 'signup' },\n    style: {\n      themeStyle: [\n        'authForm',\n        'flexSpaceBetweenColumn',\n        'marginBottomMedium',\n        'paddingMedium'\n      ]\n    }\n  };\n\n  // TODO: Add loading image here\n  if (userLoading) return <div></div>;\n\n  return (\n    <Div fontSizeModule={[1, null, 2, null, 3]}>\n      <Div\n        id=\"signinboxmodule\"\n        width={[1]}\n        themeStyle={['flexCenterSpaceEvenlyColumn', 'marginTopLarge']}\n      >\n        <Modal\n          isOpen={isOpen}\n          modalMessage={modalMessage}\n          toggleModal={toggleModal}\n        />\n        <H1\n          themeStyle={signinOpen ? ['marginBottomSmall'] : ['marginTopSmall']}\n          color=\"secondary\"\n        >\n          Chapivia\n        </H1>\n        <H3\n          display={signinOpen ? 'none' : 'block'}\n          textTransform=\"uppercase\"\n          themeStyle={['marginLargeY']}\n          onClick={() => setSigninOpen(true)}\n          color=\"primary\"\n          animation={flashingText}\n        >\n          Press Start To Play\n        </H3>\n        <H3\n          display={signinOpen ? 'block' : 'none'}\n          textTransform=\"uppercase\"\n          themeStyle={['marginLargeY']}\n          onClick={() => setSigninOpen(false)}\n          color=\"primary\"\n          textAlign=\"center \"\n          animation={flashingText}\n        >\n          Chapivia Is Currently In Maintenance Check Back Monday February 17th\n          at 9:00AM\n        </H3>\n        {/* <Div display={signinOpen ? 'block' : 'none'} width={[1]}>\n          <Form\n            onSubmit={userSignin}\n            form={form}\n            inputs={inputs}\n            validate={signinValidation}\n            buttons={buttons}\n          />\n        </Div> */}\n\n        <Div textTransform=\"uppercase\">\n          <P>&copy; 2019 Chapivia LTD.</P>\n          <P>All Rights Reserver</P>\n        </Div>\n      </Div>\n    </Div>\n  );\n}\n\nexport default Signin;\n","import React, { useState } from 'react';\nimport Form from '@cbryant24/styled-react-form';\nimport { signupValidation } from './validations';\n\nimport { Div, H1, P, Button } from '@cbryant24/styled-react';\nimport Modal from './Modal';\nimport { useAuth, useRouter } from '../hooks';\n\n//TODO: Errors message applicable to correct field only\n\nfunction Signup(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const { signup } = useAuth();\n  const router = useRouter();\n\n  async function userSignup(event, formVals) {\n    try {\n      await signup(formVals);\n    } catch (res) {\n      toggleModal();\n      setModalMessage(res.graphQLErrors);\n      return;\n    }\n    return router.push('/game');\n  }\n\n  const toggleModal = e => setIsOpen(!isOpen);\n\n  const inputs = [\n    {\n      data: {\n        type: 'input',\n        name: 'name',\n        label: 'name',\n        placeholder: 'enter name',\n        required: true\n      },\n      fieldStyle: { themeStyle: 'fieldMain' },\n      inputStyle: { themeStyle: 'inputMain' }\n    },\n    {\n      data: {\n        type: 'email',\n        name: 'email',\n        label: 'email',\n        placeholder: 'enter email',\n        required: true\n      },\n      fieldStyle: { themeStyle: 'fieldMain' },\n      inputStyle: { themeStyle: 'inputMain' }\n    },\n    {\n      data: {\n        type: 'password',\n        name: 'password',\n        label: 'password',\n        placeholder: 'enter password',\n        required: true\n      },\n      fieldStyle: { themeStyle: 'fieldMain' },\n      inputStyle: { themeStyle: 'inputMain' }\n    },\n    {\n      data: {\n        type: 'password',\n        name: 'confirm password',\n        label: 'confirm password',\n        placeholder: 'reenter password',\n        required: true\n      },\n      fieldStyle: { themeStyle: 'fieldMain' },\n      inputStyle: { themeStyle: 'inputMain' }\n    }\n  ];\n\n  const buttons = [\n    {\n      text: 'Submit',\n      type: 'submit',\n      cb: null,\n      style: { themeStyle: 'squareButton', mr: [3] },\n      disabledStyle: { themeStyle: 'disabledSquareButton', mr: [3] }\n    },\n    {\n      text: 'Cancel',\n      type: 'cancel',\n      cb: null,\n      style: { themeStyle: 'squareButton' }\n    }\n  ];\n\n  const form = {\n    data: { name: 'signupForm', submit: 'signup' },\n    style: {\n      themeStyle: [\n        'authForm',\n        'flexSpaceBetweenColumn',\n        'marginBottomMedium',\n        'paddingMedium'\n      ],\n      remove: 'height',\n      height: '50em'\n    }\n  };\n\n  return (\n    <Div fontSizeModule={[1, null, 2, null, 3]}>\n      <Div\n        id=\"signupboxmodule\"\n        width={[1]}\n        themeStyle={['flexCenterSpaceEvenlyColumn', 'marginTopLarge']}\n      >\n        <Modal\n          isOpen={isOpen}\n          modalMessage={modalMessage}\n          toggleModal={toggleModal}\n        />\n        <H1 color=\"secondary\">Chapivia</H1>\n        <Form\n          onSubmit={userSignup}\n          form={form}\n          inputs={inputs}\n          validate={signupValidation}\n          buttons={buttons}\n        />\n        <Div textTransform=\"uppercase\">\n          <P>&copy; 2019 Chapivia LTD.</P>\n          <P>All Rights Reserver</P>\n        </Div>\n        <Button themeStyle=\"squareButton\" onClick={toggleModal}>\n          Click ME\n        </Button>\n      </Div>\n    </Div>\n  );\n}\n\nexport default Signup;\n","import gql from 'graphql-tag';\n\nexport default gql`\n  {\n    dailyTrivia {\n      id\n      question\n      category\n      triviaChoices {\n        id\n        choices\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport default gql`\n  {\n    correctGuesses {\n      id\n      name\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport default gql`\n{\n  triviaSolution {\n    correctChoice\n    question {\n      question\n    }\n  }\n}\n`;\n","import gql from 'graphql-tag';\n\nexport default gql`\n  {\n    guessedPlayers {\n      id\n      name\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport default gql `\n  mutation Guess( $userId: Int!, $questionId: Int!, $questionChoiceId: Int!, $guess: String!) {\n    guess( userId: $userId, questionId: $questionId, questionChoiceId: $questionChoiceId, guess: $guess) {\n      isCorrect\n    }\n  }\n`","import gql from 'graphql-tag';\n\nexport default gql`\n  {\n    nonGuessedPlayers {\n      id\n      name\n    }\n  }\n`;","import gql from 'graphql-tag';\n\nexport const DAILY_TRIVIA = gql`\n  {\n    localTrivia @client {\n      questionId\n      question\n      questionChoicesId\n      questionChoices\n      category\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport default gql`\n  {\n    scores {\n      id\n      name\n      score\n    }\n  }\n`","import gql from 'graphql-tag';\n\nexport default gql`\n  {\n    prevMonthWinners {\n      name\n      score\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport converter from 'number-to-words';\nimport moment from 'moment';\n\nimport Marquee from './Marquee';\n\nimport prevMonthWinnersQuery from '../queries/PrevMonthWinners';\nimport { BoxAll, TextAll, Div, H4, FlexUl, FlexLi, Li, P } from '@cbryant24/styled-react';\nimport { theme } from './style';\n\nfunction PrevMonthWinners(props) {\n  const {loading, data: { prevMonthWinners } = {} } = useQuery(prevMonthWinnersQuery);\n  // console.log(data)\n  // return <div>Hello World</div>\n\n  if (loading) return <div>Loading</div>;\n  \n  function createMarqueeItems() {\n    \n  }\n\n  function displayWinnersList() {\n    let winnerPlace = 1;\n    return prevMonthWinners.map( (winner, idx) => {\n      if (idx > 0) {\n        winnerPlace = prevMonthWinners[idx].score === prevMonthWinners[idx - 1] ? winnerPlace : winnerPlace + 1;\n      }\n      return (\n        <FlexLi\n          isA=\"h3\"\n          justifyContent=\"space-around\"\n          textAlign=\"center\"\n          width={[1]}\n          my={[2]}\n        >\n          <P width={[5]}>{winnerPlace}.</P> \n          <P width={[5]}>{winner.score}0,000</P>\n          <P width={[5]}>T-B-D</P>\n          <P width={[5]}>{winner.name}</P>\n        </FlexLi>\n      )\n    })\n  }\n\n  return (\n    <Div\n      display=\"flex\"\n      flexDirection=\"column\"\n      fontSizeModule={[1, null, 2]}\n    >\n      <H4\n        textAlign=\"center\"\n        my={[4]}\n      >\n        - {`${moment().subtract(1, 'month').format('MMMM')} winners`} -\n      </H4>\n      <FlexUl\n        flexDirection=\"column\"\n      >\n        {displayWinnersList()}\n      </FlexUl>\n    </Div>\n\n  )\n}\n\nexport default PrevMonthWinners;","import React, { Component } from 'react';\nimport openSocket from 'socket.io-client';\n\nclass GameController extends Component {\n  // constructor(props) {\n  //   super(props);\n\n  //   this.socket = openSocket('http://localhost:4000');\n\n  //   // this.sendMessage = this.sendMessage.bind(this);\n  // }\n\n  // componentDidMount() {\n  //   // debugger\n  //   const self = this;\n  //   this.socket.on('gameStatus', status => {\n  //     self.props.updateGameStatus(status);\n  //     console.log('the status is being emitted', status);\n  //   });\n\n  //   this.socket.on('displayTriviaAnswer', status => {\n  //     self.props.displayTriviaAnswer(status);\n  //     // debugger\n  //   });\n  // }\n  render() {\n    return <div></div>\n  }\n}\n\n// export default connect(null, actions)(GameController);\n\nexport default GameController;","import React from 'react';\nimport { Div } from '@cbryant24/styled-react';\nimport { infiniteBackground } from './style';\nimport galagaGif from './galaga_bg.gif';\n\nexport default () => {\n  return (\n    <Div\n      id=\"background\"\n      position=\"absolute\"\n      top=\"0\"\n      left=\"0\"\n      backgroundImage={`url(${galagaGif})`}\n      backgroundRepeat=\"repeat\"\n      backgroundPosition=\"0 0\"\n      backgroundSize=\"auto 100%\"\n      backgroundColor=\"black\"\n      height={[1]}\n      width={[1]}\n      animation={infiniteBackground}\n      zIndex={-1}\n    ></Div>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { Div, FlexDiv, P, createLink } from '@cbryant24/styled-react';\nimport { useQuery } from '@apollo/react-hooks';\nimport query from '../queries/Scores';\nimport { Link } from 'react-router-dom';\n\nimport { DAILY_TRIVIA } from '../localState/Queries';\n\nimport { useAuth } from '../hooks';\n\nfunction TopMenu(props) {\n  const { data } = useQuery(DAILY_TRIVIA);\n  const { loading: scoresLoading, data: playerScores } = useQuery(query);\n  const { user, signout } = useAuth(),\n    StyledLink = createLink(Link);\n\n  return (\n    <Div width={[1]} fontSizeModule={[2, 3]}>\n      <FlexDiv themeStyle=\"marginTopSmall\" justifyContent=\"space-between\">\n        <FlexDiv\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          width={[3]}\n          textAlign=\"center\"\n        >\n          <P color=\"red\">Trivia Topic</P>\n          <P>{data ? data.localTrivia.category : ''}</P>\n        </FlexDiv>\n        <FlexDiv themeStyle={['flexColumnCenter']} width={[3]}>\n          <P color=\"red\">HI-Score</P>\n          <P>\n            {scoresLoading || !playerScores\n              ? ''\n              : !scoresLoading && !playerScores.length\n              ? 0\n              : playerScores[0].score}\n          </P>\n        </FlexDiv>\n        {/* <FlexDiv\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          width={[3]}\n        >\n          {user ? \n            <Fragment>\n              <P color=\"red\" onClick={signout}>Logout</P> \n              <P>{user.name}</P>\n            </Fragment>\n            : <StyledLink \n                animation={{\n                  continuous: {\n                    from: { color: 'white' },\n                    to: { color: 'red' }\n                  },\n                  duration_continuous: 1,\n                  animation_direction: 'alternate-reverse'\n                }} \n              themeStyle=\"linkNormal\" to=\"/signup\">Click Here To Signup!\n            </StyledLink> }\n        </FlexDiv> */}\n      </FlexDiv>\n    </Div>\n  );\n}\n\nexport default TopMenu;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { GlobalStyle } from './components/style';\nimport { ThemeProvider } from '@cbryant24/styled-react';\nimport theme from './components/style/theme';\n\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport { ModalProvider } from '@cbryant24/styled-react';\n\nimport Signin from './components/Signin';\nimport Signup from './components/Signup';\nimport Game from './components/Game';\nimport GameController from './components/GameController';\nimport App from './components/App';\n\nimport { LastLocationProvider } from 'react-router-last-location';\nimport typeDefs from './localState/typeDefs';\nimport { ProvideAuth } from './hooks';\n\nconst client = new ApolloClient({\n  clientState: {\n    defaults: {\n      localTrivia: {\n        questionId: null,\n        question: '',\n        questionChoices: [],\n        questionChoicesId: null,\n        __typename: 'dailyTrivia'\n      }\n    },\n    resolvers: {},\n    typeDefs\n  },\n  uri: '/graphql'\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ProvideAuth>\n      <Router>\n        <LastLocationProvider>\n          <ThemeProvider theme={theme}>\n            <GlobalStyle />\n            <ModalProvider>\n              <App>\n                {/* <Route path=\"/game\" exact component={Game} /> */}\n                {/* <Route path='' component={GameController}/> */}\n                <Route path=\"/\" exact component={Signin} />\n                {/* <Route path=\"/signup\" component={Signup} /> */}\n              </App>\n            </ModalProvider>\n          </ThemeProvider>\n        </LastLocationProvider>\n      </Router>\n    </ProvideAuth>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { FlexDiv } from '@cbryant24/styled-react';\nimport Background from './Background';\nimport TopMenu from './TopMenu';\n// import { useQuery, useMutation, useApolloClient } from '@apollo/react-hooks';\n\nexport default ({ children }) => {\n  return (\n    <FlexDiv minHeight=\"100vh\" flexDirection=\"column\" alignItems=\"center\">\n      <Background />\n      <TopMenu />\n      {children}\n    </FlexDiv>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/galaga_bg.51d10d84.gif\";"],"sourceRoot":""}